# Generated by Django 5.1.4 on 2024-12-14 11:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ProposeIdea', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardIdea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured', models.BooleanField(default=False, help_text='Mark this idea as featured on the dashboard.', verbose_name='Featured')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Control the order in which ideas appear on the dashboard.', verbose_name='Display Order')),
                ('pinned', models.BooleanField(default=False, help_text='Pin this idea to the top of the dashboard feed.', verbose_name='Pinned')),
                ('last_accessed', models.DateTimeField(default=django.utils.timezone.now, help_text='When this idea was last accessed or updated on the dashboard.', verbose_name='Last Accessed')),
                ('idea', models.OneToOneField(help_text='The idea associated with this dashboard entry.', on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_entry', to='ProposeIdea.idea', verbose_name='Idea')),
            ],
            options={
                'verbose_name': 'Dashboard Idea',
                'verbose_name_plural': 'Dashboard Ideas',
                'ordering': ['display_order', '-last_accessed'],
            },
        ),
        migrations.CreateModel(
            name='IdeaAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, help_text='Attachment file displayed on the dashboard in detail view.', null=True, upload_to='idea_dashboard_attachments/', verbose_name='Attachment')),
                ('caption', models.CharField(blank=True, help_text='A short caption or description for this attachment.', max_length=255, verbose_name='Caption')),
                ('order', models.PositiveIntegerField(default=0, help_text='Control the order in which attachments appear in the detail view.', verbose_name='Display Order')),
                ('idea', models.ForeignKey(help_text='The idea to which this attachment belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_attachments', to='ProposeIdea.idea', verbose_name='Idea')),
            ],
            options={
                'verbose_name': 'Idea Attachment (Dashboard)',
                'verbose_name_plural': 'Idea Attachments (Dashboard)',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='IdeaDashboardUserState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_page', models.CharField(default='dashboard', help_text='The current active tab/page the user is viewing.', max_length=50, verbose_name='Active Page')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text="Timestamp of the last update to the user's dashboard state.", verbose_name='Last Updated')),
                ('selected_idea', models.ForeignKey(blank=True, help_text='The idea currently selected by the user (if any).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_by_users', to='ProposeIdea.idea', verbose_name='Selected Idea')),
                ('user', models.OneToOneField(help_text='The user whose dashboard state is tracked.', on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_state', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Idea Dashboard User State',
                'verbose_name_plural': 'Idea Dashboard User States',
            },
        ),
        migrations.CreateModel(
            name='IdeaInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', 'View'), ('discussion', 'Discussion'), ('vote', 'Vote'), ('track', 'Track')], help_text='The type of interaction performed by the user.', max_length=20, verbose_name='Interaction Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the interaction occurred.', verbose_name='Created At')),
                ('idea', models.ForeignKey(help_text='The idea that received the interaction.', on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='ProposeIdea.idea', verbose_name='Idea')),
                ('user', models.ForeignKey(help_text='The user who interacted with the idea.', on_delete=django.db.models.deletion.CASCADE, related_name='idea_interactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Idea Interaction',
                'verbose_name_plural': 'Idea Interactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IdeaView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the idea was viewed.', verbose_name='Viewed At')),
                ('idea', models.ForeignKey(help_text='The idea that was viewed.', on_delete=django.db.models.deletion.CASCADE, related_name='views', to='ProposeIdea.idea', verbose_name='Idea')),
                ('user', models.ForeignKey(help_text='The user who viewed the idea.', on_delete=django.db.models.deletion.CASCADE, related_name='idea_views', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Idea View',
                'verbose_name_plural': 'Idea Views',
                'ordering': ['-viewed_at'],
            },
        ),
    ]
